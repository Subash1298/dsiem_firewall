01_filter.conf

input {
  beats {
    port => 5044
    tags => [ "firewall" ]

  }
}

----------------------------------------------------------------------------------------------------
04_filter.conf

filter {
  dissect {

    mapping => { "message" => "%{ts} %{+ts} %{+ts} %{gw} %{+gw} %{mytime} %{device_model} %{device_serial_id} %{src_ip} %{dst_ip}" }
  }
}

filter {
  kv {
    source => "message"
    field_split => " "
    value_split => "="
    trim_key => "\""
    trim_value => "\""
    add_field => {
      "log_type" => "firewall"
  }
}
}

----------------------------------------------------------------------------------------------------
70_dsiem_firewall.conf

###############################################################################
# Dsiem firewall Plugin
# Type: Taxonomy
#
# Auto-generated by dpluger on 2023-05-17T13:01:39+05:30
###############################################################################

filter {

# 1st step: identify the source log and clone it to another event with type => siem_events

  if [fields][log_type] == "firewall" {
    clone {
      clones => [ "siem_events" ]
    }

# 2nd step: remove the source log identifier from the clone, so that the clone will not
# go through the same pipeline as the source log. Also remove the temporary type field,
# replacing it with metadata field that will be read by the rest of siem pipeline.

    if [type] == "siem_events" {
      mutate {
        id => "tag normalizedEvent "
        remove_field => [ "[fields][log_type]" , "type" ]
        add_field => {
          "[@metadata][siem_plugin_type]" => "firewall"
          "[@metadata][siem_data_type]" => "normalizedEvent"
        }
      }
    }
  }
}

# 3rd step: the actual event normalization so that it matches the format that dsiem expect.
#
# Required fields:
#   timestamp (date), title (string), sensor (string), product (string), dst_ip (string), src_ip (string)
#
# For PluginRule type plugin, the following are also required:
#   plugin_id (integer), plugin_sid (integer)
#
# For TaxonomyRule type plugin, the following is also required:
#   category (string)
#
# Optional fields:
# These fields are optional but should be included whenever possible since they can be used in directive rules:
#   dst_port (integer), src_port (integer), protocol (string), subcategory (string)
#
# These fields are also optional and can be used in directive rules. They should be used for custom data that
# are not defined in standard SIEM fields.
#   custom_label1 (string), custom_data1 (string), custom_label2 (string), custom_data2 (string)
#   custom_label3 (string), custom_data3 (string)
#
# And this field is optional, and should be included if the original logs are also stored in elasticsearch.
# This will allow direct pivoting from alarm view in the web UI to the source index.
#   src_index_pattern (string)
#
# As for other fields from source log, they will be removed by logstash plugin prune below

filter {
  if [@metadata][siem_plugin_type] == "firewall" {
    date {
      id => "timestamp "
      match => [ "[timestamp]", "ISO8601" ]
      target => [timestamp]
    }
    mutate {
      id => "siem_event fields "
      replace => {
        "title" => "%{[app_name]}"
        "src_index_pattern" => "siem_events-*"
        "sensor" => "%{[device_name]}"
        "product" => "firewall"
        "src_ip" => "%{[src_ip]}"
        "dst_ip" => "%{[dst_ip]}"
        "protocol" => "%{[protocol]}"
        "category" => "%{[app_category]}"
        "subcategory" => "%{[subcategory]}"

        "src_port" => "%{[src_port]}"
        "dst_port" => "%{[dst_port]}"
        "custom_data1" => "%{[log_subtype]}"
        "custom_data2" => "%{[fw_rule_name]}"
        "custom_data3" => "%{[nat_rule_name]}"

      }
    }

    mutate {
      id => "integer fields "
      convert => {

        "src_port" => "integer"
        "dst_port" => "integer"
      }
    }

    # delete fields except those included in the whitelist below
    prune {
      whitelist_names => [ "@timestamp$" , "^timestamp$", "@metadata", "^src_index_pattern$", "^title$", "^sensor$", "^product$",
        "^src_ip$", "^dst_ip$", "^plugin_id$", "^plugin_sid$", "^category$", "^subcategory$",
        "^src_port$", "^dst_port$", "^protocol$", "^custom_label1$", "^custom_label2$", "^custom_label3$",
        "^custom_data1$", "^custom_data2$", "^custom_data3$" ]
    }
  }
}

---------------------------------------------------------------------------------------------------------
99_output.conf

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "siem_events-%{+YYYY.MM.dd}"
    template => "/etc/logstash/index-template.d/siem_events-template.json"
    template_name => "siem_events"
    template_overwrite => true
  }
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "siem_alarms-%{+YYYY.MM.dd}"
    template => "/etc/logstash/index-template.d/siem_alarms-template.json"
    template_name => "siem_alarms"
    template_overwrite => true
  }
}
-----------------------------------------------------------------------------------------------------------
filebeat.yml

filebeat.inputs:
- type: log
  paths:
    - /var/log/syslog
  tail_files: true

output:
 logstash:
   hosts: ["logstash:5044"]
